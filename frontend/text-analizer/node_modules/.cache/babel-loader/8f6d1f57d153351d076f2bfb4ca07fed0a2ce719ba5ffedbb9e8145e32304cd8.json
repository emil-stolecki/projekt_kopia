{"ast":null,"code":"var _jsxFileName = \"/home/emil/github/projektDyplomowy/projekt_kopia/frontend/text-analizer/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useContext } from 'react';\nimport ShortUniqueId from 'short-unique-id';\nimport '../css/home.css';\nimport { Server } from '../index';\nimport Topbar from '../components/Topbar';\nimport Results from '../components/Results';\nimport Tutorial from '../components/Tutorial';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const server = useContext(Server);\n  //wpisany tekst\n  const [input, setInput] = useState('');\n  //otrzymana odpowiedź\n  const [data, setData] = useState([]);\n  //ewentualny błąd\n  const [error, setError] = useState([]);\n  //generator losowych kluczy\n  const storageKeyId = new ShortUniqueId({\n    length: 2\n  });\n  //tutorial\n  const [shouldTutorialRun, setShoulTutorialdRun] = useState(localStorage.getItem('tutorial') !== \"ok\"); //ok znaczy, że tutorial został ukończony lub pominięty\n  //const [shouldTutorialRun,setShoulTutorialdRun] = useState(true)\n  function updateTextArea(e) {\n    setInput(e.target.value);\n  }\n\n  //wysłanie tekstu do analizy\n  async function send(e) {\n    e.preventDefault();\n    if (input.length > 0 && input.length < 10000) {\n      document.body.style.cursor = 'wait';\n      try {\n        const response = await axios.post(server + 'inference', {\n          text: input\n        });\n        setData(response.data);\n        //wpis do local storage\n        const date = new Date();\n        const random = storageKeyId.rnd();\n        const key = date.getMonth() + '-' + date.getDate() + '-' + random;\n        //t - tekst, r - wynik analizy, f - czy użytkownik przesłał już feedback dotyczący tej analizy \n        let record = {\n          t: input,\n          r: response.data,\n          f: 0\n        };\n        localStorage.setItem(key, JSON.stringify(record));\n\n        //jeśli wcześniej był błąd, to po udanym zapytnaiu zniknie\n        setError('');\n      } catch (error) {\n        setError(error.message);\n      }\n      document.body.style.cursor = 'default';\n    } else if (input.length === 0) {\n      setError('pole jest puste');\n    } else {\n      setError('przekroczono limit znaków - 10 000');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      disabled: shouldTutorialRun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: updateTextArea,\n          disabled: shouldTutorialRun\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: send,\n          disabled: shouldTutorialRun,\n          children: \"Wy\\u015Blij\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clearfix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), shouldTutorialRun && /*#__PURE__*/_jsxDEV(Tutorial, {\n      shouldRun: shouldTutorialRun,\n      onFinish: () => setShoulTutorialdRun(false),\n      other: {\n        'input': setInput,\n        'response': setData\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"GjStdMKU8t5YT5GFddXZphdHRZ8=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["axios","React","useState","useContext","ShortUniqueId","Server","Topbar","Results","Tutorial","jsxDEV","_jsxDEV","Home","_s","server","input","setInput","data","setData","error","setError","storageKeyId","length","shouldTutorialRun","setShoulTutorialdRun","localStorage","getItem","updateTextArea","e","target","value","send","preventDefault","document","body","style","cursor","response","post","text","date","Date","random","rnd","key","getMonth","getDate","record","t","r","f","setItem","JSON","stringify","message","className","children","disabled","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","shouldRun","onFinish","other","_c","$RefreshReg$"],"sources":["/home/emil/github/projektDyplomowy/projekt_kopia/frontend/text-analizer/src/pages/Home.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState,useContext} from 'react';\nimport ShortUniqueId from 'short-unique-id';\nimport '../css/home.css';\nimport { Server } from '../index';\nimport Topbar from '../components/Topbar';\nimport Results from '../components/Results';\nimport Tutorial from '../components/Tutorial';\n\nexport default function Home(){\n  const server = useContext(Server)\n  //wpisany tekst\n  const [input, setInput]=useState('')\n  //otrzymana odpowiedź\n  const [data, setData] = useState([]);\n  //ewentualny błąd\n  const [error, setError] = useState([]);\n  //generator losowych kluczy\n  const storageKeyId = new ShortUniqueId({ length: 2 });\n  //tutorial\n  const [shouldTutorialRun,setShoulTutorialdRun] = useState(localStorage.getItem('tutorial')!==\"ok\")//ok znaczy, że tutorial został ukończony lub pominięty\n  //const [shouldTutorialRun,setShoulTutorialdRun] = useState(true)\nfunction updateTextArea(e){\n  setInput(e.target.value)\n}\n\n\n//wysłanie tekstu do analizy\nasync function send(e){ \n    e.preventDefault()\n    if(input.length>0 && input.length<10000){\n      document.body.style.cursor = 'wait'     \n      try {\n        const response = await axios.post(server+'inference',{text:input});\n        setData(response.data);\n        //wpis do local storage\n        const date = new Date()\n        const random = storageKeyId.rnd()\n        const key = date.getMonth() + '-' + date.getDate() +'-'+ random\n        //t - tekst, r - wynik analizy, f - czy użytkownik przesłał już feedback dotyczący tej analizy \n        let record = {t:input,r:response.data, f:0}\n        localStorage.setItem(key, JSON.stringify(record))    \n\n        //jeśli wcześniej był błąd, to po udanym zapytnaiu zniknie\n        setError('')\n      } catch (error) {\n        setError(error.message);\n      }\n      document.body.style.cursor = 'default'\n    }\n    else if(input.length===0){\n      setError('pole jest puste')\n    }\n    else{\n      setError('przekroczono limit znaków - 10 000')\n    }\n}\n\n\n  return (\n    <div className=\"App\">    \n      <Topbar disabled ={shouldTutorialRun}/>\n      <div className='content'>\n        <div className='input'>\n        <textarea  value={input}onChange={updateTextArea} disabled={shouldTutorialRun} ></textarea>\n        <br/>\n        <button className='send-button' onClick={send} disabled={shouldTutorialRun}>Wyślij</button>\n        <br/>\n        {error&&<p>{error}</p>}\n        \n        </div>\n        <Results data={data}/>\n        <div className='clearfix'></div>\n        \n      </div>\n      {shouldTutorialRun && <Tutorial shouldRun={shouldTutorialRun} onFinish={()=>setShoulTutorialdRun(false)} \n         other={{'input':setInput,'response':setData}}/>}\n     \n      \n      \n    </div>\n  );\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}