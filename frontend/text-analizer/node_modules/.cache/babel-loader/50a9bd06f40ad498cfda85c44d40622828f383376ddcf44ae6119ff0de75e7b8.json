{"ast":null,"code":"var _jsxFileName = \"/home/emil/github/projektDyplomowy/projekt_kopia/frontend/text-analizer/src/pages/Home.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ShortUniqueId from 'short-unique-id';\nimport '../css/home.css';\nimport Topbar from '../components/Topbar';\nimport Results from '../components/Results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  //wpisany tekst\n  const [input, setInput] = useState('');\n  //otrzymana odpowiedź\n  const [data, setData] = useState([]);\n  //ewentualny błąd\n  const [error, setError] = useState([]);\n  //generator losowych kluczy\n  const storageKeyId = new ShortUniqueId({\n    length: 2\n  });\n  function updateTextArea(e) {\n    setInput(e.target.value);\n  }\n\n  //wysłanie tekstu do analizy\n  async function send(e) {\n    e.preventDefault();\n    if (input.length > 0 && input.length < 10000) {\n      document.body.style.cursor = 'wait';\n      try {\n        const response = await axios.post('http://localhost:8000/inference', {\n          text: input\n        });\n        setData(response.data);\n\n        //wpis do local storage\n        const date = new Date();\n        const random = storageKeyId.rnd();\n        const key = date.getMonth() + '-' + date.getDate() + '-' + random;\n        //t - tekst, r - wynik analizy, f - czy użytkownik przesłał już feedback dotyczący tej analizy \n        let record = {\n          t: input,\n          r: response.data,\n          f: 0\n        };\n        localStorage.setItem(key, JSON.stringify(record));\n\n        //jeśli wcześniej był błąd, to po udanym zapytnaiu zniknie\n        setError('');\n      } catch (error) {\n        setError(error.message);\n      }\n      document.body.style.cursor = 'default';\n    } else if (input.length == 0) {\n      setError('pole jest puste');\n    } else {\n      setError('przekroczono limit znaków - 10 000');\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: input,\n          onChange: updateTextArea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"send-button\",\n          onClick: send,\n          children: \"Wy\\u015Blij\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clearfix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"tooltip\",\n      children: [\"Hover over me\", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"tooltiptext\",\n        children: \"Tooltip text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"y0FEv2pgxpl9l0fGE1PG8BSmeMg=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["axios","React","useState","useEffect","ShortUniqueId","Topbar","Results","jsxDEV","_jsxDEV","Home","_s","input","setInput","data","setData","error","setError","storageKeyId","length","updateTextArea","e","target","value","send","preventDefault","document","body","style","cursor","response","post","text","date","Date","random","rnd","key","getMonth","getDate","record","t","r","f","localStorage","setItem","JSON","stringify","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","class","_c","$RefreshReg$"],"sources":["/home/emil/github/projektDyplomowy/projekt_kopia/frontend/text-analizer/src/pages/Home.js"],"sourcesContent":["import axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport ShortUniqueId from 'short-unique-id';\nimport '../css/home.css';\nimport Topbar from '../components/Topbar';\nimport Results from '../components/Results';\n\nexport default function Home(){\n  //wpisany tekst\n  const [input, setInput]=useState('')\n  //otrzymana odpowiedź\n  const [data, setData] = useState([]);\n  //ewentualny błąd\n  const [error, setError] = useState([]);\n  //generator losowych kluczy\n  const storageKeyId = new ShortUniqueId({ length: 2 });\n\nfunction updateTextArea(e){\n  setInput(e.target.value)\n}\n\n\n//wysłanie tekstu do analizy\nasync function send(e){ \n    e.preventDefault()\n    if(input.length>0 && input.length<10000){\n      document.body.style.cursor = 'wait'\n      \n      try {\n        const response = await axios.post('http://localhost:8000/inference',{text:input});\n        setData(response.data);\n\n        //wpis do local storage\n        const date = new Date()\n        const random = storageKeyId.rnd()\n        const key = date.getMonth() + '-' + date.getDate() +'-'+ random\n        //t - tekst, r - wynik analizy, f - czy użytkownik przesłał już feedback dotyczący tej analizy \n        let record = {t:input,r:response.data, f:0}\n        localStorage.setItem(key, JSON.stringify(record))    \n\n        //jeśli wcześniej był błąd, to po udanym zapytnaiu zniknie\n        setError('')\n      } catch (error) {\n        setError(error.message);\n      }\n      document.body.style.cursor = 'default'\n    }\n    else if(input.length==0){\n      setError('pole jest puste')\n    }\n    else{\n      setError('przekroczono limit znaków - 10 000')\n    }\n}\n\n\n  return (\n    <div className=\"App\">\n      <Topbar/>\n      <div className='content'>\n        <div className='input'>\n        <textarea value={input}onChange={updateTextArea}></textarea>\n        <br/>\n        <button className='send-button' onClick={send}>Wyślij</button>\n        <br/>\n        {error&&<p>{error}</p>}\n        \n        </div>\n        <Results data={data}/>\n        <div className='clearfix'></div>\n        \n      </div>\n      <div class=\"tooltip\">Hover over me\n  <span class=\"tooltiptext\">Tooltip text</span>\n</div> \n    </div>\n  );\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}